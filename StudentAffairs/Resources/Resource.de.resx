<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Age" xml:space="preserve">
    <value>Alter</value>
  </data>
  <data name="ArUSur" xml:space="preserve">
    <value>Sind Sie sicher?</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Abbrechen</value>
  </data>
  <data name="CourseView" xml:space="preserve">
    <value>Kursansicht</value>
  </data>
  <data name="CreditHours" xml:space="preserve">
    <value>Kreditstunden</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Löschen</value>
  </data>
  <data name="Doctor" xml:space="preserve">
    <value>Doktor</value>
  </data>
  <data name="DoctorView" xml:space="preserve">
    <value>Doktoransicht</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>E-Mail</value>
  </data>
  <data name="GPA" xml:space="preserve">
    <value>Notendurchschnitt</value>
  </data>
  <data name="Instructor" xml:space="preserve">
    <value>Dozent</value>
  </data>
  <data name="Major" xml:space="preserve">
    <value>Hauptfach</value>
  </data>
  <data name="Mobile" xml:space="preserve">
    <value>Handy</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="None" xml:space="preserve">
    <value>Keine</value>
  </data>
  <data name="Operations" xml:space="preserve">
    <value>Operationen</value>
  </data>
  <data name="PreRequest" xml:space="preserve">
    <value>Voranfrage</value>
  </data>
  <data name="RegisteredDoctors" xml:space="preserve">
    <value>Eingetragene Ärzte</value>
  </data>
  <data name="RegisteredStudents" xml:space="preserve">
    <value>Eingetragene Studenten</value>
  </data>
  <data name="Reset" xml:space="preserve">
    <value>Zurücksetzen</value>
  </data>
  <data name="SelectInstructor" xml:space="preserve">
    <value>Wählen Sie einen Dozenten</value>
  </data>
  <data name="StudentView" xml:space="preserve">
    <value>Studentenansicht</value>
  </data>
  <data name="Submit" xml:space="preserve">
    <value>Absenden</value>
  </data>
  <data name="TotalStudents" xml:space="preserve">
    <value>Gesamtzahl der Studenten</value>
  </data>
  <data name="V-AgeEmpty" xml:space="preserve">
    <value>Alter darf nicht leer sein</value>
  </data>
  <data name="V-AgeLarge" xml:space="preserve">
    <value>Alter darf nicht größer als {ComparisonValue} sein</value>
  </data>
  <data name="V-AgeLess" xml:space="preserve">
    <value>Alter darf nicht kleiner als {ComparisonValue} sein</value>
  </data>
  <data name="V-CreditHoursEmpty" xml:space="preserve">
    <value>Kreditstunden dürfen nicht leer sein</value>
  </data>
  <data name="V-CreditHoursLarge" xml:space="preserve">
    <value>Kreditstunden dürfen nicht größer als {ComparisonValue} sein</value>
  </data>
  <data name="V-CreditHoursNegative" xml:space="preserve">
    <value>Kreditstunden dürfen nicht negativ sein</value>
  </data>
  <data name="V-EmailEmpty" xml:space="preserve">
    <value>E-Mail darf nicht leer sein</value>
  </data>
  <data name="V-EmailValid" xml:space="preserve">
    <value>{PropertyValue} ist keine gültige E-Mail-Adresse</value>
  </data>
  <data name="V-GPAEmpyt" xml:space="preserve">
    <value>Notendurchschnitt darf nicht leer sein</value>
  </data>
  <data name="V-GPALarge" xml:space="preserve">
    <value>Notendurchschnitt darf nicht größer als {ComparisonValue} sein</value>
  </data>
  <data name="V-GPANegative" xml:space="preserve">
    <value>Notendurchschnitt darf nicht negativ sein</value>
  </data>
  <data name="V-Instructor" xml:space="preserve">
    <value>Dozent muss ausgewählt werden</value>
  </data>
  <data name="V-MajorEmpty" xml:space="preserve">
    <value>Hauptfach darf nicht leer sein</value>
  </data>
  <data name="V-MajorLength" xml:space="preserve">
    <value>Die Länge des Hauptfachs ({TotalLength}) muss zwischen 2 und 150 liegen</value>
  </data>
  <data name="V-MobileEmpty" xml:space="preserve">
    <value>Handy darf nicht leer sein</value>
  </data>
  <data name="V-MobileValid" xml:space="preserve">
    <value>Handy enthält ungültige Zeichen</value>
  </data>
  <data name="V-NameEmpty" xml:space="preserve">
    <value>Name darf nicht leer sein</value>
  </data>
  <data name="V-NameLength" xml:space="preserve">
    <value>Die Länge des Namens ({TotalLength}) muss zwischen 3 und 50 liegen</value>
  </data>
  <data name="V-PreRequest" xml:space="preserve">
    <value>Voranfrage muss ein gültiger Kurs sein oder auf "Keine" gesetzt werden</value>
  </data>
  <data name="AcademicYear" xml:space="preserve">
    <value>Akademisches Jahr</value>
</data>
<data name="ContactUs" xml:space="preserve">
    <value>Kontaktieren Sie uns</value>
</data>
<data name="EventsActivities" xml:space="preserve">
    <value>Veranstaltungen &amp; Aktivitäten</value>
</data>
<data name="Home" xml:space="preserve">
    <value>Startseite</value>
</data>
<data name="LogIn" xml:space="preserve">
    <value>Anmelden</value>
</data>
<data name="P-Course" xml:space="preserve">
    <value>Geben Sie den Kursnamen ein</value>
</data>
<data name="P-Email" xml:space="preserve">
    <value>Geben Sie Ihre E-Mail-Adresse ein</value>
</data>
<data name="P-Major" xml:space="preserve">
    <value>Geben Sie Ihr Hauptfach ein</value>
</data>
<data name="P-Mobile" xml:space="preserve">
    <value>Geben Sie Ihre Handynummer ein</value>
</data>
<data name="P-Name" xml:space="preserve">
    <value>Geben Sie Ihren Namen ein</value>
</data>
<data name="P-Survey" xml:space="preserve">
    <value>Möchten Sie noch etwas erwähnen...</value>
</data>
<data name="Rate" xml:space="preserve">
    <value>Bewerten Sie Ihre Zufriedenheit (1 bis 10)</value>
</data>
<data name="Register" xml:space="preserve">
    <value>Registrieren</value>
</data>
<data name="Semester" xml:space="preserve">
    <value>Semester</value>
</data>
<data name="StudentServices" xml:space="preserve">
    <value>Studentendienste</value>
</data>
<data name="Survey" xml:space="preserve">
    <value>Umfrage</value>
</data>
<data name="Survey-Content" xml:space="preserve">
    <value>Wie aktuell ist der Kursinhalt?</value>
</data>
<data name="Survey-Expectation" xml:space="preserve">
    <value>Hat der Kurs Ihre Erwartungen erfüllt?</value>
</data>
<data name="Survey-Instructor" xml:space="preserve">
    <value>Wie war der Dozent?</value>
</data>
<data name="Survey-Lap" xml:space="preserve">
    <value>Wie war das Labor?</value>
</data>
<data name="Survey-Others" xml:space="preserve">
    <value>Weitere Kommentare</value>
</data>
<data name="Survey-Overall" xml:space="preserve">
    <value>Gesamterlebnis:</value>
</data>
<data name="SurveyTitle" xml:space="preserve">
    <value>Ihr Feedback hilft uns, uns zu verbessern.</value>
</data>
<data name="AcademicEmail" xml:space="preserve">
    <value>Akademische E-Mail</value>
</data>

<data name="CourseResults" xml:space="preserve">
    <value>Kurs Ergebnisse</value>
</data>

<data name="Courses" xml:space="preserve">
    <value>Kurse</value>
</data>

<data name="Doctors" xml:space="preserve">
    <value>Dozenten</value>
</data>

<data name="Home-SubTitle" xml:space="preserve">
    <value>Ihr Zentrum für alle studentischen Dienstleistungen, Veranstaltungen und Materialien</value>
</data>

<data name="Home-Title" xml:space="preserve">
    <value>Willkommen im Studentenangelegenheiten-System</value>
</data>

<data name="MedicalServices" xml:space="preserve">
    <value>Medizinische Dienste</value>
</data>

<data name="Military" xml:space="preserve">
    <value>Militärbescheinigung</value>
</data>

<data name="RegistrationReport" xml:space="preserve">
    <value>Anmeldebericht</value>
</data>

<data name="Schedule" xml:space="preserve">
    <value>Schulplan</value>
</data>

<data name="SelectCourse" xml:space="preserve">
    <value>Kurs auswählen</value>
</data>

<data name="SelectSemester" xml:space="preserve">
    <value>Semester auswählen</value>
</data>

<data name="SelectYear" xml:space="preserve">
    <value>Akademisches Jahr auswählen</value>
</data>

<data name="StudentAffairs" xml:space="preserve">
    <value>Studentenangelegenheiten</value>
</data>

<data name="Students" xml:space="preserve">
    <value>Studenten</value>
</data>

<data name="V-Course" xml:space="preserve">
    <value>Ein Kurs muss ausgewählt werden</value>
</data>

<data name="V-EmailExists" xml:space="preserve">
    <value>Die E-Mail ({PropertyValue}) ist bereits registriert</value>
</data>

<data name="V-Semester" xml:space="preserve">
    <value>Ein Semester muss ausgewählt werden</value>
</data>

<data name="V-YearEmpty" xml:space="preserve">
    <value>Ein akademisches Jahr muss ausgewählt werden</value>
</data>

</root>