<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AcademicEmail" xml:space="preserve">
    <value>Academic Email</value>
  </data>
  <data name="AcademicYear" xml:space="preserve">
    <value>Academic Year</value>
  </data>
  <data name="Age" xml:space="preserve">
    <value>Age</value>
  </data>
  <data name="ArUSur" xml:space="preserve">
    <value>Are you sure ?</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="ContactUs" xml:space="preserve">
    <value>Contact Us</value>
  </data>
  <data name="CourseResults" xml:space="preserve">
    <value>Course Results</value>
  </data>
  <data name="Courses" xml:space="preserve">
    <value>Courses</value>
  </data>
  <data name="CourseView" xml:space="preserve">
    <value>Course View</value>
  </data>
  <data name="CreditHours" xml:space="preserve">
    <value>Credit Hours</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Doctor" xml:space="preserve">
    <value>Doctor</value>
  </data>
  <data name="Doctors" xml:space="preserve">
    <value>Doctors</value>
  </data>
  <data name="DoctorView" xml:space="preserve">
    <value>Doctor View</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="EventsActivities" xml:space="preserve">
    <value>Events &amp; Activities</value>
  </data>
  <data name="GPA" xml:space="preserve">
    <value>GPA</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="Home-SubTitle" xml:space="preserve">
    <value>Your hub for all student services, events, and materials</value>
  </data>
  <data name="Home-Title" xml:space="preserve">
    <value>Welcome to the Student Affairs System</value>
  </data>
  <data name="Instructor" xml:space="preserve">
    <value>Instructor</value>
  </data>
  <data name="LogIn" xml:space="preserve">
    <value>Log In</value>
  </data>
  <data name="Major" xml:space="preserve">
    <value>Major</value>
  </data>
  <data name="MedicalServices" xml:space="preserve">
    <value>Medical Services</value>
  </data>
  <data name="Military" xml:space="preserve">
    <value>Military Certification</value>
  </data>
  <data name="Mobile" xml:space="preserve">
    <value>Mobile</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="None" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="Operations" xml:space="preserve">
    <value>Operations</value>
  </data>
  <data name="P-Course" xml:space="preserve">
    <value>Enter course name</value>
  </data>
  <data name="P-Email" xml:space="preserve">
    <value>Enter your email</value>
  </data>
  <data name="P-Major" xml:space="preserve">
    <value>Enter your major</value>
  </data>
  <data name="P-Mobile" xml:space="preserve">
    <value>Enter your mobile</value>
  </data>
  <data name="P-Name" xml:space="preserve">
    <value>Enter your name</value>
  </data>
  <data name="P-Survey" xml:space="preserve">
    <value>Anything you like to mention...</value>
  </data>
  <data name="PreRequest" xml:space="preserve">
    <value>Pre-Request</value>
  </data>
  <data name="Rate" xml:space="preserve">
    <value>Rate your satisfaction (1 to 10)</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="RegisteredDoctors" xml:space="preserve">
    <value>Registered Doctors</value>
  </data>
  <data name="RegisteredStudents" xml:space="preserve">
    <value>Registered Students</value>
  </data>
  <data name="RegistrationReport" xml:space="preserve">
    <value>Registration Report</value>
  </data>
  <data name="Reset" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="Schedule" xml:space="preserve">
    <value>School Schedule</value>
  </data>
  <data name="SelectCourse" xml:space="preserve">
    <value>Select Course</value>
  </data>
  <data name="SelectInstructor" xml:space="preserve">
    <value>Select an instructor</value>
  </data>
  <data name="SelectSemester" xml:space="preserve">
    <value>Select Semester</value>
  </data>
  <data name="SelectYear" xml:space="preserve">
    <value>Select Academic Year</value>
  </data>
  <data name="Semester" xml:space="preserve">
    <value>Semester</value>
  </data>
  <data name="StudentAffairs" xml:space="preserve">
    <value>Student Affairs</value>
  </data>
  <data name="Students" xml:space="preserve">
    <value>Students</value>
  </data>
  <data name="StudentServices" xml:space="preserve">
    <value>Student Services</value>
  </data>
  <data name="StudentView" xml:space="preserve">
    <value>Student View</value>
  </data>
  <data name="Submit" xml:space="preserve">
    <value>Submit</value>
  </data>
  <data name="Survey" xml:space="preserve">
    <value>Survey</value>
  </data>
  <data name="Survey-Content" xml:space="preserve">
    <value>How the course content is up-to-date?</value>
  </data>
  <data name="Survey-Expectation" xml:space="preserve">
    <value>How the course live up to your expectations?</value>
  </data>
  <data name="Survey-Instructor" xml:space="preserve">
    <value>How was the Instructor?</value>
  </data>
  <data name="Survey-Lap" xml:space="preserve">
    <value>How was the Lap?</value>
  </data>
  <data name="Survey-Others" xml:space="preserve">
    <value>Other comments</value>
  </data>
  <data name="Survey-Overall" xml:space="preserve">
    <value>Overall Experience:</value>
  </data>
  <data name="SurveyTitle" xml:space="preserve">
    <value>Your feedback helps us improve.</value>
  </data>
  <data name="TotalStudents" xml:space="preserve">
    <value>Total Students</value>
  </data>
  <data name="V-AgeEmpty" xml:space="preserve">
    <value>Age can't be empty</value>
  </data>
  <data name="V-AgeLarge" xml:space="preserve">
    <value>Age can't be larger than {ComparisonValue}</value>
  </data>
  <data name="V-AgeLess" xml:space="preserve">
    <value>Age can't be less than {ComparisonValue}</value>
  </data>
  <data name="V-Course" xml:space="preserve">
    <value>Course must be selected</value>
  </data>
  <data name="V-CreditHoursEmpty" xml:space="preserve">
    <value>Credit Hours can't be empty</value>
  </data>
  <data name="V-CreditHoursLarge" xml:space="preserve">
    <value>Credit Hours can't be larger than {ComparisonValue}</value>
  </data>
  <data name="V-CreditHoursNegative" xml:space="preserve">
    <value>Credit Hours can't be negative</value>
  </data>
  <data name="V-EmailEmpty" xml:space="preserve">
    <value>Email can't be empty</value>
  </data>
  <data name="V-EmailExists" xml:space="preserve">
    <value>The email ({PropertyValue}) has been registered</value>
  </data>
  <data name="V-EmailValid" xml:space="preserve">
    <value>{PropertyValue} is not a valid email address</value>
  </data>
  <data name="V-GPAEmpyt" xml:space="preserve">
    <value>GPA can't be empty</value>
  </data>
  <data name="V-GPALarge" xml:space="preserve">
    <value>GPA can't be larger than {ComparisonValue}</value>
  </data>
  <data name="V-GPANegative" xml:space="preserve">
    <value>GPA can't be negative</value>
  </data>
  <data name="V-Instructor" xml:space="preserve">
    <value>Instructor must be selected</value>
  </data>
  <data name="V-MajorEmpty" xml:space="preserve">
    <value>Major can't be empty</value>
  </data>
  <data name="V-MajorLength" xml:space="preserve">
    <value>Major Length({TotalLength}) must be between 2 and 150</value>
  </data>
  <data name="V-MobileEmpty" xml:space="preserve">
    <value>Mobile can't be empty</value>
  </data>
  <data name="V-MobileValid" xml:space="preserve">
    <value>Mobile use invalid characters</value>
  </data>
  <data name="V-NameEmpty" xml:space="preserve">
    <value>Name can't be empty</value>
  </data>
  <data name="V-NameLength" xml:space="preserve">
    <value>Name Length({TotalLength}) must be between 3 and 50</value>
  </data>
  <data name="V-PreRequest" xml:space="preserve">
    <value>PreRequest must be a valid course or set to None.</value>
  </data>
  <data name="V-Semester" xml:space="preserve">
    <value>Semester must be selected</value>
  </data>
  <data name="V-YearEmpty" xml:space="preserve">
    <value>Academic Year must be selected</value>
  </data>
</root>
